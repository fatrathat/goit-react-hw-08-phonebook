{"version":3,"file":"static/js/157.0c5371f5.chunk.js","mappings":"mOAuBA,EAnBiB,WACf,OAAyBA,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAlCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACf,GAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,mCAAWJ,MACX,mBAAQK,KAAK,SAASC,QAPG,WAC3BJ,EAAOH,GACPI,EAAS,IACV,EAIG,sBAKL,E,SCGD,EArBe,WACb,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAcb,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMa,OAAOC,KAAjB,IAOrC,OACE,0BACE,kBACEN,KAAK,OACLM,MAAOF,EACPG,SAVsB,SAAAC,GAC1B,IAAMH,EAASG,EAAEC,OAAOH,MACxBJ,GAASQ,EAAAA,EAAAA,IAAUL,GACpB,EAQKM,YAAY,YAInB,E,SCID,EAvBoB,WAClB,OAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eAEMC,GAAWvB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMsB,SAASC,KAAnB,IAE5BC,GADSzB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMa,OAAOC,KAAjB,IACJW,OAAOC,cAMnC,OAJuBJ,EAAST,QAAO,SAAAc,GAAO,OAC5CA,EAAQC,KAAKF,cAAcG,SAASL,EADQ,IAIxBM,KAAI,YAA2B,IAAxBF,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,OACrC,OACE,0BACGJ,EADH,KACWI,GACT,mBAAQJ,KAAK,SAASpB,KAAK,OAAOC,QAAS,kBAAMY,EAAcU,EAApB,EAA3C,sBAFOA,EAOZ,GACF,ECLD,EAfqB,WACnB,OAA6BE,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAEd,OACE,gCACGA,IAAc,wCACdD,IACC,yBACE,SAAC,EAAD,QAKT,E,oCC6DD,EAvEoB,WAClB,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeM,EAAf,KACQJ,GAASD,EAAAA,EAAAA,MAATC,KACR,GAAqBK,EAAAA,EAAAA,MAAdC,GAAP,eAOMC,EAAgB,SAAAzB,GACpB,MAAwBA,EAAEC,OAAlBW,EAAR,EAAQA,KAAMd,EAAd,EAAcA,MAED,SAATc,EACFS,EAAQvB,EAAMY,eAEdY,EAAUxB,EAEb,EAEK4B,EAAa,mCAAG,WAAM1B,GAAN,oEACpBA,EAAE2B,kBAGAT,EAAKU,MAAK,SAAAjB,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBE,EAAKF,aAAxC,IAJC,uBAMlBmB,MAAM,GAAD,OAAIjB,EAAJ,4BApBPS,EAAQ,IACRC,EAAU,IAaU,0CAYdE,EAAW,CAAEZ,KAAAA,EAAMI,OAAAA,IAZL,2CAAH,sDAenB,OACE,0BACE,iBAAMc,SAAUJ,EAAhB,UACE,4BACE,qCAEE,kBACE3B,SAAU0B,EACVjC,KAAK,OACLoB,KAAK,OACLmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,gBAAKC,UAAU,uBAAf,UACE,uCAEE,kBACEnC,SAAU0B,EACVjC,KAAK,MACLoB,KAAK,SACLmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,UAId,mBAAQzC,KAAK,SAAb,+BAKT,EC5DD,EAXiB,WACf,OACE,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/UserMenu/UserMenu.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useLogoutMutation } from 'store/APIs/userAPI';\n\nconst UserMenu = () => {\n  const { token, email } = useSelector(state => state.user);\n  const [logout] = useLogoutMutation();\n  const navigate = useNavigate();\n\n  const onLogoutClickHandler = () => {\n    logout(token);\n    navigate('/');\n  };\n  return (\n    <div>\n      <p>Email: {email}</p>\n      <button type=\"button\" onClick={onLogoutClickHandler}>\n        Logout\n      </button>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'store/slices/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter.value);\n\n  const changeFilterHandler = e => {\n    const filter = e.target.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={filterValue}\n        onChange={changeFilterHandler}\n        placeholder=\"Search\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport { useDeleteContactMutation } from 'store/APIs/contactsAPI';\n\nconst ContactItem = () => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter.value);\n  const normalFilter = filter.trim().toLowerCase();\n\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalFilter)\n  );\n\n  return filterContacts.map(({ name, id, number }) => {\n    return (\n      <li key={id}>\n        {name}: {number}\n        <button name=\"delete\" type=\"text\" onClick={() => deleteContact(id)}>\n          delete\n        </button>\n      </li>\n    );\n  });\n};\n\nexport default ContactItem;\n","import ContactItem from '../ContactItem/ContactItem';\n\nimport { useGetContactsQuery } from '../../store/APIs/contactsAPI';\n\nconst ContactsList = () => {\n  const { data, isFetching } = useGetContactsQuery();\n\n  return (\n    <>\n      {isFetching && <div>Loading...</div>}\n      {data && (\n        <ul>\n          <ContactItem />\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import { useState } from 'react';\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'store/APIs/contactsAPI';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const changeHandler = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') {\n      setName(value.toLowerCase());\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    if (\n      data.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} is already in contacts`);\n      reset();\n\n      return;\n    }\n\n    await addContact({ name, number });\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <div>\n          <label>\n            Name\n            <input\n              onChange={changeHandler}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <div className=\"ContactForm__control\">\n            <label>\n              Number\n              <input\n                onChange={changeHandler}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n            </label>\n          </div>\n          <button type=\"submit\">Add contact</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import UserMenu from 'components/UserMenu/UserMenu';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <UserMenu />\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["useSelector","state","user","token","email","useLogoutMutation","logout","navigate","useNavigate","type","onClick","dispatch","useDispatch","filterValue","filter","value","onChange","e","target","setFilter","placeholder","useDeleteContactMutation","deleteContact","contacts","items","normalFilter","trim","toLowerCase","contact","name","includes","map","id","number","useGetContactsQuery","data","isFetching","useState","setName","setNumber","useAddContactMutation","addContact","changeHandler","submitHandler","preventDefault","find","alert","onSubmit","pattern","title","required","className"],"sourceRoot":""}